// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Kin",
            "email": "trannguyentrungkien1006@gmail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/items": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get items",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name",
                        "description": "Sort column (vd: name)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (vd: email, full_name)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itemdto.GetItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "put": {
                "description": "API cập nhật item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update item",
                "parameters": [
                    {
                        "description": "Update item info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/itemdto.UpdateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated item successfully",
                        "schema": {
                            "$ref": "#/definitions/itemdto.UpdateItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "API thêm item mới",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create new item",
                "parameters": [
                    {
                        "description": "Create item info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/itemdto.CreateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created item successfully",
                        "schema": {
                            "$ref": "#/definitions/itemdto.CreateItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/items/{itemID}": {
            "get": {
                "description": "API lấy thông tin item theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID item",
                        "name": "itemID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itemdto.GetItemByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "API xóa item theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID item",
                        "name": "itemID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted item successfully",
                        "schema": {
                            "$ref": "#/definitions/itemdto.DeleteItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/posts": {
            "post": {
                "description": "API tạo mới một post và trả về thông tin post + user + JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "Post creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postdto.CreatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/postdto.GetPostByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name",
                        "description": "Sort column (vd: fullName, email)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (vd: email, fullName)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.GetUserResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "put": {
                "description": "API cập nhật người dùng",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "Update user info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user successfully",
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateUserResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "API thêm người dùng",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "Create user info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created user successfully",
                        "schema": {
                            "$ref": "#/definitions/userdto.CreateUserResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/users/{userID}": {
            "get": {
                "description": "API get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID user",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.GetUserByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "API delete user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID user",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.DeleteUserResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enums.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "INVALID_QUERY_PARAM"
                },
                "message": {
                    "type": "string",
                    "example": "Name is require"
                }
            }
        },
        "enums.PostType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "PostTypeFoundItem": "1 nhặt được đồ",
                "PostTypeGiveAwayOldItem": "0 tặng đồ cũ",
                "PostTypeOther": "3 khác",
                "PostTypeSeekLoseItem": "2 tìm kiếm đồ"
            },
            "x-enum-varnames": [
                "PostTypeGiveAwayOldItem",
                "PostTypeFoundItem",
                "PostTypeSeekLoseItem",
                "PostTypeOther"
            ]
        },
        "enums.UserStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "UserStatusActive": "1",
                "UserStatusInactive": "0",
                "UserStatusLocked": "2"
            },
            "x-enum-varnames": [
                "UserStatusInactive",
                "UserStatusActive",
                "UserStatusLocked"
            ]
        },
        "itemdto.CreateItemRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "itemdto.CreateItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/itemdto.ItemDTO"
                }
            }
        },
        "itemdto.CreateItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.CreateItemResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.DeleteItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.GetItemByIDResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/itemdto.ItemDTO"
                }
            }
        },
        "itemdto.GetItemByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.GetItemByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.GetItemResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/itemdto.ItemDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "itemdto.GetItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.GetItemResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.ItemDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "itemdto.UpdateItemRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "itemdto.UpdateItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/itemdto.ItemDTO"
                }
            }
        },
        "itemdto.UpdateItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.UpdateItemResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "postdto.AdminPostDTO": {
            "type": "object",
            "properties": {
                "authorName": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "postdto.CreatePostRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "authorID": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "strbase64",
                        " strbase64"
                    ]
                },
                "info": {
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "true: anonymous, false: not anonymous",
                    "type": "string",
                    "example": "0123456789"
                },
                "title": {
                    "type": "string",
                    "example": "Tôi muốn tìm đồ thất lạc"
                },
                "type": {
                    "$ref": "#/definitions/enums.PostType"
                }
            }
        },
        "postdto.GetPostByIDResponse": {
            "type": "object",
            "properties": {
                "JWT": {
                    "type": "string"
                },
                "post": {
                    "$ref": "#/definitions/postdto.AdminPostDTO"
                },
                "user": {
                    "$ref": "#/definitions/userdto.UserDTO"
                }
            }
        },
        "postdto.GetPostByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/postdto.GetPostByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "password",
                "roleID"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "0123456789"
                },
                "roleID": {
                    "type": "integer"
                },
                "status": {
                    "description": "0: inactive, 1: active, 2: banned",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.UserStatus"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "userdto.CreateUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/userdto.UserDTO"
                }
            }
        },
        "userdto.CreateUserResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.CreateUserResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.DeleteUserResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.GetUserByIDResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/userdto.UserDTO"
                }
            }
        },
        "userdto.GetUserByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.GetUserByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.GetUserResponse": {
            "type": "object",
            "properties": {
                "totalPage": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userdto.UserDTO"
                    }
                }
            }
        },
        "userdto.GetUserResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.GetUserResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.UpdateUserRequest": {
            "type": "object",
            "required": [
                "roleID"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string",
                    "example": "Information Technology"
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "0123456789"
                },
                "roleID": {
                    "type": "integer"
                },
                "status": {
                    "description": "0: inactive, 1: active, 2: banned",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.UserStatus"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "userdto.UpdateUserResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.UserDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API DATN 2025",
	Description:      "Đây là tài liệu Swagger cho hệ thống.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
